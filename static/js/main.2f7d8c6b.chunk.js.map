{"version":3,"sources":["contextAPI/Context.jsx","component/counter.jsx","component/componentb.jsx","contextAPI/ContactUseReducer.jsx","component/contact-form.js","component/contact-table.jsx","views/contact-view.jsx","App.js","reportWebVitals.js","index.js"],"names":["CounterContext","createContext","UserCounter","useContext","Context","props","useState","conter","setCounter","value","increaseCounter","decreaseCounter","Provider","children","Counter","onClick","Componentb","style","background","color","marginTop","ContactContext","initialState","contacts","id","name","email","loading","error","reducer","state","action","type","payload","filter","contact","Error","ContactContextProvider","useReducer","dispatch","ContactForm","useFormInput","Segment","basic","Form","onSubmit","_","uniqueId","onReset","Group","widths","Field","width","Input","placeholder","required","Button","fluid","primary","initialValue","setValue","onChange","e","target","ContactTable","selectedId","setSelectedId","rows","map","Table","Row","active","Cell","celled","striped","selectable","Header","HeaderCell","Body","Footer","fullWidth","colSpan","floated","icon","labelPosition","size","disabled","Icon","Contacts","as","App","className","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f7d8c6b.chunk.js","sourcesContent":["import { useContext, useState, createContext } from \"react\";\r\nimport React from \"react\";\r\n\r\nconst CounterContext = createContext();\r\nexport const UserCounter = () => useContext(CounterContext);\r\n///////////////////////////////////////////////////////////////////\r\nfunction Context(props) {\r\n  const [conter, setCounter] = useState(0);\r\n\r\n  const increaseCounter = () => setCounter(conter + 1);\r\n  const decreaseCounter = () => setCounter(conter - 1);\r\n\r\n  const value = { conter, increaseCounter, decreaseCounter };\r\n  return (\r\n    <CounterContext.Provider value={value}>\r\n      {props.children}\r\n    </CounterContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Context;\r\n","import React from \"react\";\r\nimport { UserCounter } from \"../contextAPI/Context\";\r\nfunction Counter() {\r\n  const { conter, increaseCounter, decreaseCounter } = UserCounter();\r\n  return (\r\n    <div>\r\n      <h1>Counter: {conter}</h1>\r\n      <button onClick={increaseCounter}>IncreaseCounter</button>\r\n      <button onClick={decreaseCounter}>decreaseCounter</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport { UserCounter } from \"../contextAPI/Context\";\r\n\r\nfunction Componentb() {\r\n  const { conter } = UserCounter();\r\n  return (\r\n    <div>\r\n      <h1 style={{ background: \"black\", color: \"white\", marginTop: \"15px\" }}>\r\n        Counter B: {conter}\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Componentb;\r\n","import React, { useReducer, createContext } from \"react\";\r\n\r\nexport const ContactContext = createContext();\r\n\r\nconst initialState = {\r\n  contacts: [\r\n    {\r\n      id: \"098\",\r\n      name: \"Diana Prince\",\r\n      email: \"diana@us.army.mil\",\r\n    },\r\n    {\r\n      id: \"099\",\r\n      name: \"Bruce Wayne\",\r\n      email: \"bruce@batmail.com\",\r\n    },\r\n    {\r\n      id: \"100\",\r\n      name: \"Clark Kent\",\r\n      email: \"clark@metropolitan.com\",\r\n    },\r\n  ],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        contacts: [...state.contacts, action.payload],\r\n      };\r\n    case \"DEL_CONTACT\":\r\n      return {\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"START\":\r\n      return {\r\n        loading: true,\r\n      };\r\n    case \"COMPLETE\":\r\n      return {\r\n        loading: false,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nexport const ContactContextProvider = (props) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <ContactContext.Provider value={[state, dispatch]}>\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Segment, Form, Input, Button } from \"semantic-ui-react\";\r\nimport _ from \"lodash\";\r\nimport { ContactContext } from \"../contextAPI/ContactUseReducer.jsx\";\r\n\r\nexport default function ContactForm() {\r\n  const name = useFormInput(\"\");\r\n  const email = useFormInput(\"\");\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [state, dispatch] = useContext(ContactContext);\r\n\r\n  const onSubmit = () => {\r\n    dispatch({\r\n      type: \"ADD_CONTACT\",\r\n      payload: { id: _.uniqueId(10), name: name.value, email: email.value },\r\n    });\r\n    // Reset Form\r\n    name.onReset();\r\n    email.onReset();\r\n  };\r\n\r\n  return (\r\n    <Segment basic>\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Group widths=\"3\">\r\n          <Form.Field width={6}>\r\n            <Input placeholder=\"Enter Name\" {...name} required />\r\n          </Form.Field>\r\n          <Form.Field width={6}>\r\n            <Input placeholder=\"Enter Email\" {...email} type=\"email\" required />\r\n          </Form.Field>\r\n          <Form.Field width={4}>\r\n            <Button fluid primary>\r\n              New Contact\r\n            </Button>\r\n          </Form.Field>\r\n        </Form.Group>\r\n      </Form>\r\n    </Segment>\r\n  );\r\n}\r\n\r\nfunction useFormInput(initialValue) {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setValue(\"\");\r\n  };\r\n\r\n  return {\r\n    value,\r\n    onChange: handleChange,\r\n    onReset: handleReset,\r\n  };\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Segment, Table, Button, Icon } from \"semantic-ui-react\";\r\nimport { ContactContext } from \"../contextAPI/ContactUseReducer\";\r\n\r\nexport default function ContactTable() {\r\n  // Subscribe to `contacts` state and access dispatch function\r\n  const [state, dispatch] = useContext(ContactContext);\r\n  // Declare a local state to be used internally by this component\r\n  const [selectedId, setSelectedId] = useState();\r\n\r\n  const delContact = (id) => {\r\n    dispatch({\r\n      type: \"DEL_CONTACT\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const onRemoveUser = () => {\r\n    delContact(selectedId);\r\n    setSelectedId(null); // Clear selection\r\n  };\r\n\r\n  const rows = state.contacts.map((contact) => (\r\n    <Table.Row\r\n      key={contact.id}\r\n      onClick={() => setSelectedId(contact.id)}\r\n      active={contact.id === selectedId}\r\n    >\r\n      <Table.Cell>{contact.id}</Table.Cell>\r\n      <Table.Cell>{contact.name}</Table.Cell>\r\n      <Table.Cell>{contact.email}</Table.Cell>\r\n    </Table.Row>\r\n  ));\r\n\r\n  return (\r\n    <Segment>\r\n      <Table celled striped selectable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Id</Table.HeaderCell>\r\n            <Table.HeaderCell>Name</Table.HeaderCell>\r\n            <Table.HeaderCell>Email</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>{rows}</Table.Body>\r\n        <Table.Footer fullWidth>\r\n          <Table.Row>\r\n            <Table.HeaderCell />\r\n            <Table.HeaderCell colSpan=\"4\">\r\n              <Button\r\n                floated=\"right\"\r\n                icon\r\n                labelPosition=\"left\"\r\n                color=\"red\"\r\n                size=\"small\"\r\n                disabled={!selectedId}\r\n                onClick={onRemoveUser}\r\n              >\r\n                <Icon name=\"trash\" /> Remove User\r\n              </Button>\r\n            </Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Footer>\r\n      </Table>\r\n    </Segment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Segment, Header } from \"semantic-ui-react\";\r\nimport ContactForm from \"../component/contact-form\";\r\nimport ContactTable from \"../component/contact-table\";\r\nimport { ContactContextProvider } from \"../contextAPI/ContactUseReducer\";\r\n\r\nexport default function Contacts() {\r\n  return (\r\n    <ContactContextProvider>\r\n      <Segment basic>\r\n        <Header as=\"h3\">Contacts</Header>\r\n        <ContactForm />\r\n        <ContactTable />\r\n      </Segment>\r\n    </ContactContextProvider>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport { UserCounter } from \"./contextAPI/Context\";\nimport Counter from \"./component/counter\";\nimport Componentb from \"./component/componentb\";\nimport Context from \"./contextAPI/Context.jsx\";\nimport { Container } from \"semantic-ui-react\";\nimport ContactView from \"./views/contact-view.jsx\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Context>\n        <Counter />\n        <Componentb />\n      </Context>\n      <Container>\n        <h1>React Hooks Context Demo</h1>\n        <ContactView />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"fomantic-ui-css/semantic.min.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}